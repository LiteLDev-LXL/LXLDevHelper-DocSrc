{
  "ClassName": "data",
  "AllFunc": [
    {
      "Description": "创建 / 打开一个配置文件",
      "FuncName": "openConfig",
      "ReturnDescription": "打开 / 创建的配置文件对象，如果返回值为Null，则代表创建 / 打开失败",
      "IsStatic": true,
      "Params": [
        {
          "Description": "配置文件所在路径，以BDS根目录为基准\n如果配置文件路径中的目录尚不存在，接口会自动创建，不需要手动调用file.createDir",
          "ParamType": "String",
          "ParamName": "path",
          "Optional": false
        },
        {
          "Description": "（可选参数）配置文件的格式，字符串形式。可选项有：json  或  ini",
          "ParamType": "String",
          "ParamName": "format",
          "Optional": true
        },
        {
          "Description": "（可选参数）配置文件的默认内容。\n如果初始化时目标文件不存在，引擎将新建一个配置文件并将此处的默认内容写入文件中。\n如果不传入此参数，新建时的配置文件将为空",
          "ParamType": "String",
          "ParamName": "default_cfg",
          "Optional": true
        }
      ],
      "ReturnType": "Conf"
    },
    {
      "Description": "创建 / 打开数据库\r\n在使用数据库之前，你先需要给出一个数据库路径，LXL将打开/创建指定的数据库并返回一个数据库对象。\r\n一个leveldb数据库是由多个文件组成的，所以你需要传入一个文件夹的路径，数据库文件会被储存于这个文件夹当中。\r\n如果这个目录已含有一个数据库，LXL会将它打开，否则会新建一个。",
      "FuncName": "openDB",
      "ReturnDescription": "打开 / 创建的数据库对象，如果返回值为Null，则代表创建 / 打开失败",
      "IsStatic": true,
      "Params": [
        {
          "Description": "数据库的储存目录路径，以BDS根目录为基准",
          "ParamType": "String",
          "ParamName": "dir",
          "Optional": false
        }
      ],
      "ReturnType": "DB"
    },
    {
      "Description": "变量转换为Json字符串",
      "FuncName": "toJson",
      "ReturnDescription": "",
      "IsStatic": true,
      "Params": [
        {
          "Description": "要转换为Json字符串的变量。允许进行转换的数据类型有：\nInteger Float String Boolean Array Object \n其中，Array 和 Object 内部仅能嵌套上面出现的这些元素",
          "ParamType": "Any",
          "ParamName": "data",
          "Optional": false
        },
        {
          "Description": "（可选参数）如果要格式化输出的字符串，则传入此参数\n代表每个缩进的空格数量，这样输出的Json串更适合人阅读\n此参数默认为0，即不对输出字符串进行格式化",
          "ParamType": "Integer",
          "ParamName": "space",
          "Optional": true
        }
      ],
      "ReturnType": "String"
    },
    {
      "Description": "Json字符串解析为变量",
      "FuncName": "parseJson",
      "ReturnDescription": "",
      "IsStatic": true,
      "Params": [
        {
          "Description": "",
          "ParamType": "String",
          "ParamName": "Json_str",
          "Optional": false
        }
      ],
      "ReturnType": "Any"
    },
    {
      "Description": "字符串转MD5",
      "FuncName": "toMD5",
      "ReturnDescription": "转换的结果",
      "IsStatic": true,
      "Params": [
        {
          "Description": "",
          "ParamType": "String",
          "ParamName": "string",
          "Optional": false
        }
      ],
      "ReturnType": "String"
    },
    {
      "Description": "字符串转SHA1",
      "FuncName": "toSHA1",
      "ReturnDescription": "转换的结果",
      "IsStatic": true,
      "Params": [
        {
          "Description": "",
          "ParamType": "String",
          "ParamName": "string",
          "Optional": false
        }
      ],
      "ReturnType": "String"
    }
  ],
  "AllProperty": [],
  "IsStatic": true,
  "IsInterface": false,
  "Description": "data类"
}